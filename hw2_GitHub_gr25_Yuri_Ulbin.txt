JSON
 4. Создать внешний репозиторий c названием JSON: Создаём репозиторий на сайте github
 5. Клонировать репозиторий JSON на локальный компьютер: git clone https://github.com/Yuri-Ulbin/JSON.git
 6. Внутри локального JSON создать файл “new.json”: touch new.json
 7. Добавить файл под гит: $ git add . 
 8. Закоммитить файл: $ git commit -m "commit new.json"
 9. Отправить файл на внешний GitHub репозиторий: git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: 
       vim new.json
       пишем текст.
 11. Отправить изменения на внешний репозиторий: git commit -a -m "commit edited new.json"
                                                 git push
 12. Создать файл preferences.json: touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
      vim preferences.json
      пишем текст. 
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:
      touch skills.json
      vim skills.json
      пишем текст.
 15. Отправить сразу 2 файла на внешний репозиторий:
      git add .
      git commit -m "commit preferences.json skills.json"
      git push
 16. На веб интерфейсе создать файл bug_report.json: add file-create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: кнопка commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON: edit this file-пишем баг-репорт 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: кнопка commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON: git fetch 'смотрим на изменения'
                                                            git pull  'синхронизируем репозитории'
XML
 21. Создать внешний репозиторий c названием XML: Создаём репозиторий на сайте.
 22. Клонировать репозиторий XML на локальный компьютер: git clone https://github.com/Yuri-Ulbin/XML.git
 23. Внутри локального XML создать файл “new.xml”: touch new.xml
 24. Добавить файл под гит: git add .
 25. Закоммитить файл: git commit -m "first commit new.XML"
 26. Отправить файл на внешний GitHub репозиторий: git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML: vim new.xml
 28. Отправить изменения на внешний репозиторий: git commit -a -m "update new.xml"
                                                 git push
 29. Создать файл preferences.xml: touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML: vim preferences.xml
                                                                                                                                                                                          пишем текст. 
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML. touch skills.xml
                                                                                                        vim skills.xml
 32. Сделать коммит в одну строку: git commit -a -m "commit preferences.xml skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий: git push
 34. На веб интерфейсе создать файл bug_report.xml: add file-create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе: commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML: edit this file-пишем баг-репорт 
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе: кнопка commit changes
 38. Синхронизировать внешний и локальный репозиторий XML: git fetch 'смотрим на изменения'
                                                           git pull  'синхронизируем репозитории'
TXT
 1. Создать внешний репозиторий c названием TXT: Создаём репозиторий на сайте github
 2. Клонировать репозиторий TXT на локальный компьютер: git clone https://github.com/Yuri-Ulbin/TXT.git
 3. Внутри локального TXT создать файл “new.txt”: touch new.txt 
 4. Добавить файл под гит: git add .
 5. Закоммитить файл: git commit -m "commit new.txt"
 6. Отправить файл на внешний GitHub репозиторий: git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT: vim new.txt
 8. Отправить изменения на внешний репозиторий git commit -a -m "commit edited new.txt"
                                                git push
 9. Создать файл preferences.txt: touch preferences.xml
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. vim preferences.txt
                                                                                                                                                                                          пишем текст. 
 11. Создать файл skills.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT:  touch skills.txt
                                                                                                          vim skills.txt
 12. Сделать коммит в одну строку: git commit -a -m "commit preferences.txt skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий: git push
 14. На веб интерфейсе создать файл bug_report.txt: add file-create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе: commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT: edit this file-пишем баг-репорт 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: кнопка commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT: git fetch 'смотрим на изменения'
                                                           git pull  'синхронизируем репозитории' 
